{"version":1,"notes":"Layer 0 is QWERTY alphas. Layer 1 is DVORAK alphas. Layer 2 and 3 are the modifiers for Mac and Windows, respectively. Layers 4 and 5 are &amp;amp;amp;amp;amp;#39;lower/raise&amp;amp;amp;amp;amp;#39;, layer 6 is where keyboard settings are, such as picking the default layer and then choosing which alpha layer you want. Every layer has MO(6) on it to make sure you aren&amp;amp;amp;amp;amp;#39;t locked out. As of now, I have to set a default layer manually to give the QWERTY alphas some modifiers. I know there is further QMK programming I can perform, but I&amp;amp;amp;amp;amp;#39;m still learning. This is the most modular way I know of that let&amp;amp;amp;amp;amp;#39;s me combine QWERTY/Dvorak with either Mac/Win modifiers in the most maintainable way possible.","documentation":"\"This file is a QMK Configurator export. You can import this at <https://config.qmk.fm>. It can also be used directly with QMK's source code.\n\nTo setup your QMK environment check out the tutorial: <https://docs.qmk.fm/#/newbs>\n\nYou can convert this file to a keymap.c using this command: `qmk json2c {keymap}`\n\nYou can compile this keymap using this command: `qmk compile {keymap}`\"\n","keyboard":"keebio/nyquist/rev3","keymap":"jona-keebio-nyquist-rev3_rt-arrows_raiseonly","layout":"LAYOUT_ortho_4x12","layers":[["KC_TAB","KC_Q","KC_W","KC_E","KC_R","KC_T","KC_Y","KC_U","KC_I","KC_O","KC_P","KC_BSPC","KC_ESC","KC_A","KC_S","KC_D","KC_F","KC_G","KC_H","KC_J","KC_K","KC_L","KC_SCLN","KC_QUOT","KC_LSFT","KC_Z","KC_X","KC_C","KC_V","KC_B","KC_N","KC_M","KC_COMM","KC_DOT","KC_SLSH","KC_SFTENT","MO(4)","KC_LCTL","KC_CAPS","LGUI(KC_LALT)","KC_LALT","KC_LGUI","KC_SPC","MO(3)","KC_LEFT","KC_DOWN","KC_UP","KC_RGHT"],["KC_TRNS","KC_QUOT","KC_COMM","KC_DOT","KC_P","KC_Y","KC_F","KC_G","KC_C","KC_R","KC_L","KC_TRNS","KC_TRNS","KC_A","KC_O","KC_E","KC_U","KC_I","KC_D","KC_H","KC_T","KC_N","KC_S","KC_SLSH","KC_TRNS","KC_SCLN","KC_Q","KC_J","KC_K","KC_X","KC_B","KC_M","KC_W","KC_V","KC_Z","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS"],["KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_LGUI","KC_CAPS","LCTL(KC_LSFT)","KC_LALT","KC_LCTL","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS"],["KC_GRV","KC_1","KC_2","KC_3","KC_4","KC_5","KC_6","KC_7","KC_8","KC_9","KC_0","KC_TRNS","KC_DEL","KC_EXLM","KC_AT","KC_HASH","KC_DLR","KC_PERC","KC_TRNS","KC_MINS","KC_EQL","KC_LBRC","KC_RBRC","KC_TRNS","KC_TRNS","KC_CIRC","KC_AMPR","KC_ASTR","KC_LT","KC_GT","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_BSLS","KC_TRNS","KC_SPC","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_HOME","KC_PGDN","KC_PGUP","KC_END"],["KC_TRNS","KC_F1","KC_F2","KC_F3","KC_F4","KC_F5","KC_F6","KC_F7","KC_F8","KC_F9","KC_F10","KC_DEL","RESET","KC_F11","KC_F12","RGB_MOD","RGB_HUI","RGB_SAI","RGB_VAI","DF(0)","DF(1)","TG(2)","KC_TRNS","KC_TRNS","KC_CAPS","KC_TRNS","RGB_TOG","RGB_RMOD","RGB_HUD","RGB_SAD","RGB_VAD","BL_TOGG","BL_DEC","BL_INC","BL_BRTG","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_MPLY","KC_TRNS","KC_MPRV","KC_VOLD","KC_VOLU","KC_MNXT"]],"author":"jonadev"}